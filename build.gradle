buildscript {
    ext.kotlin_version = '1.4.10'
    repositories {
        maven { url "https://jitpack.io" }
        // 阿里云云效仓库：https://maven.aliyun.com/mvn/guide
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        // 华为开源镜像：https://mirrors.huaweicloud.com/
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        // JitPack 远程仓库：https://jitpack.io
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.3.0'
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        maven { url "https://jitpack.io" }
        // 阿里云云效仓库：https://maven.aliyun.com/mvn/guide
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        // 华为开源镜像：https://mirrors.huaweicloud.com/
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        // JitPack 远程仓库：https://jitpack.io
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
        jcenter()
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
    // 将构建文件统一输出到项目根目录下的 build 文件夹
    setBuildDir(new File(rootDir, "build/${path.replaceAll(':', '/')}"))
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task javadoc(type: Javadoc) {
    options.encoding = "utf-8"
}