def repoConfig = {
    all { ArtifactRepository repo ->
        if (repo instanceof MavenArtifactRepository) {
            def url = repo.url.toString()
            if (url.contains('repo1.maven.org/maven2')
                || url.contains('jcenter.bintray.com')
                || url.contains('maven.google.com')
                || url.contains('plugins.gradle.org/m2')
                || url.contains('repo.spring.io/libs-milestone')
                || url.contains('repo.spring.io/plugins-release')
                || url.contains('repo.grails.org/grails/core')
                || url.contains('repository.apache.org/snapshots')
            ) {
                println "gradle init: [buildscript.repositories] (${repo.name}: ${repo.url}) removed"
                remove repo
            }
        }
    }

/// project level build.gradle repos config / in China
//        google()
//        jcenter()
//        mavenLocal()
//        mavenCentral()
//        maven{url "https://jitpack.io"}
    // 腾讯云/阿里云 maven 镜像聚合了：central、jcenter、google、gradle-plugin
    maven { url 'https://mirrors.cloud.tencent.com/gradle/'}
    maven { url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public/' }

    maven { url 'https://maven.aliyun.com/repository/central' }
    // jcenter & public
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
}

allprojects {
    buildscript {
        repositories repoConfig
    }

    repositories repoConfig
}